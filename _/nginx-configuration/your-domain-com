#
# if you have default NGINX configuration,
# you need to place this config under /etc/nginx/sites-enabled/
# you can name it as you like, - usually it should be named by your domain name
#
# !!!
# Kindly note, you need to replace '<YOUR-DOMAIN>' with your proper domain name
# where demo applications will be available
#
# You also need to generate SSL certificates for the web server
# !!!
#

server {
    ssl on;
    listen 443 ssl;
    server_name <YOUR-DOMAIN>;
    charset utf-8;
    root /usr/local/www/<YOUR-DOMAIN>;
    access_log /dev/null;
    error_log /dev/null;
 
    ssl_certificate /etc/nginx/ssl/<YOUR-DOMAIN>_ssl.crt;
    ssl_certificate_key /etc/nginx/ssl/<YOUR-DOMAIN>_ssl.key;

    ssl_protocols       SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
   
    location /chapter1/signaling {
        proxy_pass http://localhost:30001/signaling;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    }
    location /chapter2/signaling {
        proxy_pass http://localhost:30002/signaling;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    }
    location /chapter3/signaling {
        proxy_pass http://localhost:30003/signaling;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    }
    location /chapter4/signaling {
        proxy_pass http://localhost:30004/signaling;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    }
    location /chapter4/signin {
        proxy_pass http://localhost:30004/signin;
        proxy_redirect off;
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    }
    location /chapter4/signout {
        proxy_pass http://localhost:30004/signout;
        proxy_redirect off;
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    }
    location /chapter4/conference/ {
        proxy_pass http://localhost:30004/conference/;
        proxy_redirect off;
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    }
    location /chapter4 {
        proxy_pass http://localhost:30004/;
        proxy_redirect off;
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    }
}

# the following config will server on secured port 443
# it will redirect all requests to your domain to [www.your-domain]
# for example
# my-cool-domain.com will be redirected to www.my-cool-domain.com
server {
    ssl on;
    listen 443 ssl;
    server_name <YOUR-DOMAIN>;
    access_log /dev/null;
    error_log /dev/null;
 
    ssl_certificate /etc/nginx/ssl/<YOUR-DOMAIN>_ssl.crt;
    ssl_certificate_key /etc/nginx/ssl/<YOUR-DOMAIN>_ssl.key;

    ssl_protocols       SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    return 301 https://www.<YOUR-DOMAIN>$request_uri;
}

# the following config will server on non-secure port 80
# it will redirect all requests to secured server
server {
    listen 80;
    server_name www.<YOUR-DOMAIN> <YOUR-DOMAIN>;

    access_log /dev/null;
    error_log /dev/null;

    return 301 https://www.<YOUR-DOMAIN>$request_uri;
}

